[
    {
        "question": "I am using NVIDIA modulus and I want to create my own boundary condition atop of what is already done. I want to simulate electromagnetic waving, and I need impedance boundary condition - in short, part of the wave A should be reflected (Ar) and other part should be transversed (At). The equations are A_r = A*(z_1-z_2)/(z1+z2) A_t = A*(2*z_1)/(z1+z2) where the impedance is defined as z = sqrt(mu/epsilon) mu is permitivity and epsilon is permeability of the medium. Checking out modulus, Sommerfeld boundary condition is defined as: class SommerfeldBC(PDE): \"\"\" Frequency domain ABC, Sommerfeld radiation condition Only for real part Equation: 'n x _curl(E) = 0' Parameters ========== ux : str Ex uy : str Ey uz : str Ez \"\"\" name = \"SommerfeldBC\" def __init__(self, ux=\"ux\", uy=\"uy\", uz=\"uz\"): # set params self.ux = ux self.uy = uy self.uz = uz # coordinates x, y, z = Symbol(\"x\"), Symbol(\"y\"), Symbol(\"z\") normal_x = Symbol(\"normal_x\") normal_y = Symbol(\"normal_y\") normal_z = Symbol(\"normal_z\") # make input variables, t is wave number input_variables = {\"x\": x, \"y\": y, \"z\": z} # E field assert isinstance(ux, str), \"uz needs to be string\" ux = Function(ux)(*input_variables) assert isinstance(uy, str), \"uy needs to be string\" uy = Function(uy)(*input_variables) assert isinstance(uz, str), \"uz needs to be string\" uz = Function(uz)(*input_variables) # compute cross product of curl for sommerfeld bc n = [normal_x, normal_y, normal_z] u = [ux, uy, uz] bcs = _cross(n, _curl(u)) # set equations self.equations = {} self.equations[\"SommerfeldBC_real_x\"] = bcs[0] self.equations[\"SommerfeldBC_real_y\"] = bcs[1] self.equations[\"SommerfeldBC_real_z\"] = bcs[2] Here u is the wave (in this case electrical induction E in given number of dimensions (1/2/3), for x, y and z axis). I somewhat can't figure our how to take in one wave E with some amplitude and then make two new waves in each direction (inside and outside of the boundary. I will be glad for any insight :)",
        "answers": [],
        "votes": []
    }
]